q5= 0.0200377
k= 2.00797
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50        )
x
length(x)
length(mrate)
plot(x,mrate)
plot(x,mrate, log='y')
abline(v=0:14)
x
x-.25
exp( -s*(x-.25))
mort_multip = rev( exp( -s*(x-.25)))
mort_multip
mrate[1]
mrate[1] * .50
1-exp( -mrate[1] * .50)
1-exp( -mrate[1] * .50) - qvals[1]
1-exp( -mrate[1] * .50)
mort_multip
mort_multip = exp( -s*(x-.25))
mort_multip
s= -0.0403123
q5= 0.0200377
k= 2.00797
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('stan'=qvals[i], 'manual'= qq))
}
s= -0.0403123
q5= 0.0200377
k= 2.00797
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], stan'=qvals[i], 'manual'= qq))
}
s= -0.0403123
q5= 0.0200377
k= 2.00797
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], 'stan'=qvals[i], 'manual'= qq))
}
s= -0.0403123
q5= 0.0200377
k= 2.00797
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
s=0
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], 'stan'=qvals[i], 'manual'= qq))
}
wilmoth =
read.csv(text = '
age,am,bm,cm,vm,af,bf,cf,vf
0,  -0.5101, 0.8164,-0.0245,     0,-0.6619, 0.7684,-0.0277,     0
1,      -99,    -99,    -99,   -99,    -99,    -99,    -99,   -99
5,  -3.0435, 1.5270, 0.0817,0.1720,-2.5608, 1.7937, 0.1082,0.2788
10, -3.9554, 1.2390, 0.0638,0.1683,-3.2435, 1.6653, 0.1088,0.3423
15, -3.9374, 1.0425, 0.0750,0.2161,-3.1099, 1.5797, 0.1147,0.4007
20, -3.4165, 1.1651, 0.0945,0.3022,-2.9789, 1.5053, 0.1011,0.4133
25, -3.4237, 1.1444, 0.0905,0.3624,-3.0185, 1.3729, 0.0815,0.3884
30, -3.4438, 1.0682, 0.0814,0.3848,-3.0201, 1.2879, 0.0778,0.3391
35, -3.4198, 0.9620, 0.0714,0.3779,-3.1487, 1.1071, 0.0637,0.2829
40, -3.3829, 0.8337, 0.0609,0.3530,-3.2690, 0.9339, 0.0533,0.2246
45, -3.4456, 0.6039, 0.0362,0.3060,-3.5202, 0.6642, 0.0289,0.1774
50, -3.4217, 0.4001, 0.0138,0.2564,-3.4076, 0.5556, 0.0208,0.1429
55, -3.4144, 0.1760,-0.0128,0.2017,-3.2587, 0.4461, 0.0101,0.1190
60, -3.1402, 0.0921,-0.0216,0.1616,-2.8907, 0.3988, 0.0042,0.0807
65, -2.8565, 0.0217,-0.0283,0.1216,-2.6608, 0.2591,-0.0135,0.0571
70, -2.4114, 0.0388,-0.0235,0.0864,-2.2949, 0.1759,-0.0229,0.0295
75, -2.0411, 0.0093,-0.0252,0.0537,-2.0414, 0.0481,-0.0354,0.0114
80, -1.6456, 0.0085,-0.0221,0.0316,-1.7308,-0.0064,-0.0347,0.0033
85, -1.3203,-0.0183,-0.0219,0.0061,-1.4473,-0.0531,-0.0327,0.0040
90, -1.0368,-0.0314,-0.0184,     0,-1.1582,-0.0617,-0.0259,     0
95, -0.7310,-0.0170,-0.0133,     0,-0.8655,-0.0598,-0.0198,     0
100,-0.5024,-0.0081,-0.0086,     0,-0.6294,-0.0513,-0.0134,     0
105,-0.3275,-0.0001,-0.0048,     0,-0.4282,-0.0341,-0.0075,     0
110,-0.2212,-0.0028,-0.0027,     0,-0.2966,-0.0229,-0.0041,     0
')
# female coef
abcv_f = wilmoth %>%
filter(age < 40) %>%
select(ends_with('f')) %>%
as.matrix()
abcv_m = wilmoth %>%
filter(age < 40) %>%
select(ends_with('m')) %>%
as.matrix()
# age x (abcv)
# averaging the male and female coeffs at this point implies that
# we expect the log mortality rate for both sexes combined to be
# the geometric average of the separate male and female rates
wilmoth_abcv = (abcv_f + abcv_m) / 2;
colnames(wilmoth_abcv) = c('a_both','b_both','c_both','v_both')
library(tidyverse)
wilmoth =
read.csv(text = '
age,am,bm,cm,vm,af,bf,cf,vf
0,  -0.5101, 0.8164,-0.0245,     0,-0.6619, 0.7684,-0.0277,     0
1,      -99,    -99,    -99,   -99,    -99,    -99,    -99,   -99
5,  -3.0435, 1.5270, 0.0817,0.1720,-2.5608, 1.7937, 0.1082,0.2788
10, -3.9554, 1.2390, 0.0638,0.1683,-3.2435, 1.6653, 0.1088,0.3423
15, -3.9374, 1.0425, 0.0750,0.2161,-3.1099, 1.5797, 0.1147,0.4007
20, -3.4165, 1.1651, 0.0945,0.3022,-2.9789, 1.5053, 0.1011,0.4133
25, -3.4237, 1.1444, 0.0905,0.3624,-3.0185, 1.3729, 0.0815,0.3884
30, -3.4438, 1.0682, 0.0814,0.3848,-3.0201, 1.2879, 0.0778,0.3391
35, -3.4198, 0.9620, 0.0714,0.3779,-3.1487, 1.1071, 0.0637,0.2829
40, -3.3829, 0.8337, 0.0609,0.3530,-3.2690, 0.9339, 0.0533,0.2246
45, -3.4456, 0.6039, 0.0362,0.3060,-3.5202, 0.6642, 0.0289,0.1774
50, -3.4217, 0.4001, 0.0138,0.2564,-3.4076, 0.5556, 0.0208,0.1429
55, -3.4144, 0.1760,-0.0128,0.2017,-3.2587, 0.4461, 0.0101,0.1190
60, -3.1402, 0.0921,-0.0216,0.1616,-2.8907, 0.3988, 0.0042,0.0807
65, -2.8565, 0.0217,-0.0283,0.1216,-2.6608, 0.2591,-0.0135,0.0571
70, -2.4114, 0.0388,-0.0235,0.0864,-2.2949, 0.1759,-0.0229,0.0295
75, -2.0411, 0.0093,-0.0252,0.0537,-2.0414, 0.0481,-0.0354,0.0114
80, -1.6456, 0.0085,-0.0221,0.0316,-1.7308,-0.0064,-0.0347,0.0033
85, -1.3203,-0.0183,-0.0219,0.0061,-1.4473,-0.0531,-0.0327,0.0040
90, -1.0368,-0.0314,-0.0184,     0,-1.1582,-0.0617,-0.0259,     0
95, -0.7310,-0.0170,-0.0133,     0,-0.8655,-0.0598,-0.0198,     0
100,-0.5024,-0.0081,-0.0086,     0,-0.6294,-0.0513,-0.0134,     0
105,-0.3275,-0.0001,-0.0048,     0,-0.4282,-0.0341,-0.0075,     0
110,-0.2212,-0.0028,-0.0027,     0,-0.2966,-0.0229,-0.0041,     0
')
# female coef
abcv_f = wilmoth %>%
filter(age < 40) %>%
select(ends_with('f')) %>%
as.matrix()
abcv_m = wilmoth %>%
filter(age < 40) %>%
select(ends_with('m')) %>%
as.matrix()
# age x (abcv)
# averaging the male and female coeffs at this point implies that
# we expect the log mortality rate for both sexes combined to be
# the geometric average of the separate male and female rates
wilmoth_abcv = (abcv_f + abcv_m) / 2;
colnames(wilmoth_abcv) = c('a_both','b_both','c_both','v_both')
wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
logmx = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
logmx[2] = -0.25 * (exp(logmx[1]) + log(1-q5)); // adjust to match q5
logmx    = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
logmx[2] = -0.25 * (exp(logmx[1]) + log(1-q5))
logmx
logmx    = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
logmx[2] = -0.25 * (exp(logmx[1]) + log(1-q5))
exp(logmx)
s= -0.0403123
q5= 0.0200377
k=  2.00797
logmx    = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
mx       = exp(logmx)
mx[2] = -0.25 * (mx[1] + log(1-q5))
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
s=0
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], 'stan'=qvals[i], 'manual'= qq))
}
mx
s= -0.0403123
q5= 0.0200377
k=  2.00797
logmx    = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
mx       = exp(logmx)
mx[2] = -0.25 * (mx[1] + log(1-q5))
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
s=0
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], 'stan'=qvals[i], 'manual'= qq))
}
i=10
x[1]
x[i]
i=11
x[i]
mm = rev( mort_multip[1:i])
mm
H
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
x[i]
H
q5
1-exp(-H)
s= -0.0403123
q5= 0.0200377
k=  2.00797
logmx    = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
mx       = exp(logmx)
mx[2] = -0.25 * (mx[1] + log(1-q5))
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], 'stan'=qvals[i], 'manual'= qq))
}
s= -0.0403123
q5= 0.0200377
k=  2.00797
logmx    = wilmoth_abcv %*% c(1, log(q5), (log(q5))^2, k)
mx       = exp(logmx)
mx[2] = -0.25 * (mx[1] + log(1-q5))
mrate = c(0.0538267,0.00452354,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000847953,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000617367,0.000584082,0.000584082,0.000584082,0.000584082,0.000584082)
tvals = seq(0, -12, by=-.5)
qvals= c(0.0265544,0.0287984,0.029227,0.0296641,0.03011,0.0305647,0.0310284,0.0315014,0.0319837,0.0324756,0.0328409,0.0332135,0.0335935,0.0339811,0.0343765,0.0347797,0.0351909,0.0356104,0.0360382,0.0364745,0.0368955,0.0373249,0.0377628,0.0382094,0.038665)
x = seq(0.25, 12.25, by=.50 )
s=0
mort_multip = exp( -s*(x-.25))
for (i in seq(x)) {
mm = rev( mort_multip[1:i])
H  = sum( mrate[1:i] * mm) /2
qq = 1-exp(-H)
print( c('x'=x[i], 'stan'=qvals[i], 'manual'= qq))
}
time = seq(from=0, to=100, by=.01)
tims
time
surv = exp(-mu * time)
time = seq(from=0, to=100, by=.01)
mu = .50
surv = exp(-mu * time)
plot(time,surv)
windows()
plot(time,surv)
plot(time,surv, xlim=c(0,20))
time = seq(from=0, to=25, by=.01)
mu = .50
surv = exp(-mu * time)
plot(time,surv)
diff( surv)
deaths = -diff(surv)
plot(deaths)
tail(1:10,-1)
plot( head(time,-1), deaths)
age_at_death = time+.005
weighted.mean( age_at_death, deaths)
weighted.mean( head(age_at_death,-1), deaths)
head(1:10, -1)
tail(1:10, -1)
head(surv)
tail(surv)
time = seq(from=0, to=25, by=.01)
mu = .50
surv = c(exp(-mu * time), 0)
deaths = -diff(surv)
age_at_death = time+.005
weighed.mean( age_at_death, deaths)
time = seq(from=0, to=25, by=.01)
mu = .50
surv = c(exp(-mu * time), 0)
deaths = -diff(surv)
age_at_death = time+.005
weighted.mean( age_at_death, deaths)
deaths
plot(age_at_death, deaths ,type='h')
plot(age_at_death, deaths )
time = seq(from=0, to=25, by=.01)
mu = .25
surv = c(exp(-mu * time), 0)
deaths = -diff(surv)
age_at_death = time+.005
weighted.mean( age_at_death, deaths)
time = seq(from=0, to=100, by=.01)
mu = .05
surv = c(exp(-mu * time), 0)
deaths = -diff(surv)
age_at_death = time+.005
weighted.mean( age_at_death, deaths)
time = seq(from=0, to=100, by=.005)
mu = .05
surv = c(exp(-mu * time), 0)
deaths = -diff(surv)
age_at_death = time+.005
weighted.mean( age_at_death, deaths)
time = seq(from=0, to=1000, by=.005)
mu = .05
surv = c(exp(-mu * time), 0)
deaths = -diff(surv)
age_at_death = time+.005
weighted.mean( age_at_death, deaths)
S = function(time) {
exp(-.50*time)
}
S(2)
S(2.1)
S(2)-S(2.1)
( S(2)-S(2.1)) / 0.1
S = function(time) {
exp(-.50*time)
}
delta = 0.1
S(2)
S(2 + delta)
S(2)-S(2 + delta)
( S(2)-S(2+delta)) / delta
S = function(time) {
exp(-.50*time)
}
delta = 0.01
S(2)
S(2 + delta)
S(2)-S(2 + delta)
( S(2)-S(2+delta)) / delta
S = function(time) {
exp(-.50*time)
}
delta = 0.00001
S(2)
S(2 + delta)
S(2)-S(2 + delta)
( S(2)-S(2+delta)) / delta
S = function(time) {
exp(-.50*time)
}
delta = 0.00000001
S(2)
S(2 + delta)
S(2)-S(2 + delta)
( S(2)-S(2+delta)) / delta
S = function(time) {
exp(-.50*time)
}
delta = 0.00000000001
S(2)
S(2 + delta)
S(2)-S(2 + delta)
( S(2)-S(2+delta)) / delta
exp(-.50)
.50* exp(-.50*2)
family = function(n) {}
family = function(n) { sample(c('M','F'), n, replace=TRUE, probs=c(51,49))}
family(4)
family = function(n) { sample(c('M','F'), n, replace=TRUE, prob=c(51,49))}
family(4)
sapply(1:1000, family(5))
sapply(1:1000, function(i) family(5))
z = sapply(1:1000, function(i) family(5))
dim(z)
z = t(z)
z
table(z)
2608/5000
table(z)
z
cull = function(v) {
ja = FALSE
cull = function(v) {
ja = (v[1] == 'M')
for (i in 2:length(v)) {
cull = function(v) {
newv = v
ja = (v[1] = 'M')
for (i in 2:length(v)) {
if (ja) newv[i] = NA
ja = (ja | v[i]=='M')
}
return(newv)
}
cull(z[1,])
z
z[1,]
z[1,5]
z[1,]
cull(z[1,])
fix(cull)
cull(z[1,])
cull(z[2,])
apply(z,1,cull)
unlist( apply(z,1,cull))
apply(z,1,cull)
apply(z,1,cull) %>% dim()
dim( apply(z,1,cull))
apply(z,1,cull) -> zz
zz
zz = t(zz)
zz
head(zz)
as.character(zz)
table( as.character(zz))
prop.table( table( as.character(zz)))
prop.table( table( as.character(z))
)
H = 0:10000
m = .14
H*m
-H*m
exp(-H*m)
H = 0:10000
m = .14
plot(H, exp(-m*H))
windows()
plot(H, exp(-m*H))
H = 0:10000
m = .01
plot(H, exp(-m*H))
H = 0:10000
m = .00001
plot(H, exp(-m*H))
H = 0:10000
m = .001
plot(H, exp(-m*H))
setwd("~/Classes/5117 Math Demog/_Spring 2019/code and data/brass-mortality-model")
library(shiny); runApp('brass-mortality-app.R')
runApp('~/Classes/5117 Math Demog/_Spring 2019/code and data/QS/quadratic-splines-fertility-app.R')
a
R
QS
runApp('~/Classes/5117 Math Demog/_Spring 2019/code and data/QS/quadratic-splines-fertility-app.R')
df
age = seq(from=10.25, to=49.75, by=.50)
this_frate = QS(age, R, a, P, H)
base_frate = QS(age, .15, 14, 28, 35)
a
R=.2
a = 15
P = 26
H = 33
QS = function( x, R, alpha, P, H ) {
w = min(.75, .25+.025*(P-alpha))
beta = max (  min(50, 4*H-3*P) , (4*H-P)/3 )
D = P-20          # delay index
C = (P+50)/2 - H  # control index
knot    = vector("numeric",5)
knot[1] = alpha
knot[2] = alpha + w*(P-alpha)
knot[3] = P
knot[4] = (P+H)/2
knot[5] = (H+beta)/2
A      = matrix(NA,5,5)
target = vector("numeric",5)
# target value at P=1
A[1,]     = (pmax(P-knot, 0))^2
target[1] = 1
# target value at H=1/2
A[2,]     = (pmax(H-knot, 0))^2
target[2] = 1/2
# target value at beta=0
A[3,]     = (pmax(beta-knot, 0))^2
target[3] = 0
# target slope at P=0
A[4,]     = 2*pmax(P-knot, 0)
target[4] = 0
# target slope at beta=0
A[5,]     = 2*pmax(beta-knot, 0)
target[5] = 0
# calculate thetas
theta = solve(A,target)
tmp = (pmax( outer(x,knot,"-") , 0))^2
y = (x >= alpha) * (x <= beta) * R * (tmp %*% theta)  # ASFRs
return(list(R=R,alpha=alpha,P=P,H=H,
theta=theta,knot=knot,w=w,beta=beta,delay=D,control=C,
x=as.vector(x) ,y=as.vector(y) ))
} #QS
age = seq(from=10.25, to=49.75, by=.50)
this_frate = QS(age, R, a, P, H)
base_frate = QS(age, .15, 14, 28, 35)
str(this_frate)
runApp('~/Classes/5117 Math Demog/_Spring 2019/code and data/QS/quadratic-splines-fertility-app.R')
colors()
runApp('~/Classes/5117 Math Demog/_Spring 2019/code and data/QS/quadratic-splines-fertility-app.R')
library(shiny); runApp('brass-mortality-app.R')
